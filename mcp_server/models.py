# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T18:29:38+00:00

from __future__ import annotations

from enum import Enum
from typing import List, Optional

from pydantic import BaseModel, Field, RootModel


class Error(BaseModel):
    code: Optional[int] = None
    message: Optional[str] = None


class OpeningTime(RootModel[List[str]]):
    root: List[str]


class OpeningTimes(BaseModel):
    fri: Optional[OpeningTime] = None
    mon: Optional[OpeningTime] = None
    sat: Optional[OpeningTime] = None
    sun: Optional[OpeningTime] = None
    thu: Optional[OpeningTime] = None
    tue: Optional[OpeningTime] = None
    wed: Optional[OpeningTime] = None


class Type(Enum):
    Reisezentrum = 'Reisezentrum'
    Mobility_Center = 'Mobility Center'


class TravelCenter(BaseModel):
    address: Optional[str] = Field(None, description='Street address of travel center')
    city: Optional[str] = Field(None, description='City of travel center')
    id: Optional[int] = Field(None, description='Identifying number')
    lat: Optional[float] = Field(None, description='Latitude of travel center location')
    lon: Optional[float] = Field(
        None, description='Longitude of travel center location'
    )
    name: Optional[str] = Field(None, description='Name of travel center')
    openingTimes: Optional[OpeningTimes] = Field(
        None, description='Opening times of the travel center, ordered by week day'
    )
    postCode: Optional[str] = Field(None, description='Post code of travel center')
    type: Optional[Type] = Field(None, description='Type of travel center')


class TravelCenterList(RootModel[List[TravelCenter]]):
    root: List[TravelCenter]
